// --------------------------------------------------
// VARIABLES
// --------------------------------------------------
$menu-item: '.menu-item';

$locals: (
    border-thickness: rem( 1 )
);

// --------------------------------------------------
// PLACEHOLDERS
// --------------------------------------------------
// Write shared styles in placeholder rules here, then extend them from specific selectors below.
%menu-item--base {
    @include size( auto 100% );
    @include display( block );
    @include position( relative );
    @include set( margin padding, 0 );

    & > a {
        @include size( auto 100% );
        @include display( flex );
        @include align-items( center );
        @include transition( all, 0.25s );

        color: getColor( grey--dark );

        font-size: rem( 13 );

        span {
            @include display( block );
        }
    }
}

%menu-item--footer {
    display: block;

    & > a {
        display: inline-block;
        color: #666; /// TEMP

        font-size: rem( 14 );
        line-height: 1.428571; // 14 / 20
    }
}


// --------------------------------------------------
// SELECTORS
// --------------------------------------------------
/**
 * ...
 */
nav {
    @include size( auto 100% );
    @include display( none );
    @include flex-grow( 1 );

    z-index: 999;

    & > *[class^="menu"] {
        @include size( 100% );

        & > ul {
            @include size( auto 100% );
            @include display( flex );
            @include justify-content( flex-end );
            @include align-items( center );

            margin: 0;
            padding-left: 1rem;
        }
    }

    // Media queries.
    @media ( min-width: 768px ) {
        @include display( flex );
    }
}


/**
 * ...
 *
 */
 #{$menu-item} {
    @extend %menu-item--base;
}

.header-menu .menu-item {
    // Descendant elems.
    a {
        padding: 0 rem( 15 );

        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        text-align: center;

        @include pseudo( before ) {
            display: none;
        }

        @include on( hover focus ) {
            color: getColor( white );
            background-color: getColor( accent );
        }
    }
}

/**
 * ...
 *
 * TODO:
 * - Pulled nested declarations out into dedicated rules;
 */
#{$menu-item}-has-children {
    // Styles for '2nd level' nav. menu:
    & > ul {
        @include size( 200% auto );
        @include position( absolute, 100% null null 50% );
        @include transform( translateX( -50% ) );
        @include set( margin padding, 0 );

        display: none;
        background-color: getColor( white );
        box-shadow: 0 rem( 3 ) rem( 20 ) rem( -5 ) rgba( 0,0,0,0.2 );

        li {
            @include size( 100% auto );
            @include display( block );

            position: relative;
            border-top: map-get( $locals, border-thickness ) solid getColor( grey--xlight );

            a {
                @include on( hover focus ) {
                    color: getColor( grey--dark );
                    background-color: #F9F9F9;
                }

                padding: rem( 15 ) rem( 10 ) rem( 12 );
                font-size: rem( 12 );
                font-weight: 400;
            }

            // Styles for '3rd level' nav. menu:
            // TODO:
            // - Pull styles out into dedicated rule.
            ul {
                width: 100%;
                top: map-get( $locals, border-thickness)*-1;
                right: 100%;
                left: auto; // Clear `left` property, inherited from '2nd level' menu styles.
                transform: translateZ( 0 ); // Clear `transform` property, inherited from '2nd level' menu styles.
            }
        }
    }

    // Show <ul> direct descendant on hover.
    &:hover {
        & > ul {
            display: block;
        }
    }
}


.drawer-nav-toggle {
    @include size( rem( 35 ) auto );
    @include position( relative );

    display: block;
    cursor: pointer;

    // Media queries.
    @media( min-width: 768px ) {
        display: none;
    }
}

.drawer-nav-toggle__elem {
    @include size( 100% rem( 3 ) );
    @include position( absolute, 50% null null 0 );

    background-color: getColor( accent );

    @include pseudo( before after ) {
        @include size( 100% );
        @include position( absolute, 0 null null 0 );
        @include transition( transform 0.1s );

        content: '';
        display: block;
        background-color: inherit;
        transform-origin: center;
    }

    @include pseudo( before ) {
        @include transform( translateY( -250% ) );
    }

    @include pseudo( after ) {
        @include transform( translateY( 250% ) );
    }

    /// TODO:
    // - Move 'active' class into SASS var.
    // - Pull declarations below into new rule.
    .drawer-nav-active & {
        background-color: transparent;

        @include pseudo( before after ) {
            background-color: getColor( white );
        }

        @include pseudo( before ) {
            @include transform( translateY( 0 ) rotate( 45deg ) );
        }

        @include pseudo( after ) {
            @include transform( translateY( 0 ) rotate( -45deg ) );
        }
    }
}
