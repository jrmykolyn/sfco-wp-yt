// --------------------------------------------------
// VARIABLES
// --------------------------------------------------
$locals: (
	border-thickness: 0.1rem
);

// --------------------------------------------------
// PLACEHOLDERS
// --------------------------------------------------
// Write shared styles in placeholder rules here, then extend them from specific selectors below.
%menu-item--base {
	@include dims( auto 100% );
	@include set( margin padding, 0 );

	display: block;
	position: relative;

	& > a {
		@include size( auto 100% );

		display: flex;
		align-items: center;
		transition: all, 0.25s;

		color: get-color( grey--dark );
		font-size: 1.3rem;

		span {
			display: block;
		}
	}
}

%menu-item--footer {
	display: block;

	& > a {
		display: inline-block;
		color: get-color( grey--med );

		font-size: 1.4rem;
		line-height: 1.428571; // 14 / 20
	}
}

// --------------------------------------------------
// SELECTORS
// --------------------------------------------------
nav {
	@include dims( auto 100% );

	display: none;
	flex-grow: 1;

	z-index: 999;

	& > *[class^="menu"] {
		@include dims( 100% );

		& > ul {
			@include dims( auto 100% );

			display: flex;
			justify-content: flex-end;
			align-items: center;
			margin: 0;
			padding-left: 1rem;
		}
	}

	// Media queries.
	@media ( min-width: 768px ) {
		display: flex;
	}
}

.menu-item {
	@extend %menu-item--base;
}

.header-menu .menu-item {
	// Descendant elems.
	a {
		padding: 0 1.5rem;

		font-weight: 700;
		text-transform: uppercase;
		letter-spacing: 1px;
		text-align: center;

		@include pseudo( before ) {
			display: none;
		}

		@include on( hover focus ) {
			color: get-color( white );
			background-color: get-color( accent );
		}
	}
}

.header-menu .menu-item-has-children {
	// Styles for '2nd level' nav. menu:
	& > ul {
		@include dims( 200% auto );
		@include set( margin padding, 0 );

		display: none;
		background-color: get-color( white );
		box-shadow: 0 0.3rem 2rem -0.5rem rgba( get-color( black ), 0.2 );

		position: absolute;
		top: 100%;
		left: 50%;
		transform: translateX( -50% ) ;

		li {
			@include dims( 100% auto );

			display: block;
			border-top: map-get( $locals, border-thickness ) solid get-color( grey--xlight );
			position: relative;

			a {
				@include on( hover focus ) {
					color: get-color( grey--dark );
					background-color: get-color( off-white );
				}

				padding: 1.5rem 1rem 1.2rem;
				font-size: 1.2rem;
				font-weight: 400;
			}

			// Styles for '3rd level' nav. menu:
			ul {
				width: 100%;
				top: map-get( $locals, border-thickness)*-1;
				right: 100%;
				left: auto; // Clear `left` property, inherited from '2nd level' menu styles.
				transform: translateZ( 0 ); // Clear `transform` property, inherited from '2nd level' menu styles.
			}
		}
	}

	// Show <ul> direct descendant on hover.
	&:hover {
		& > ul {
			display: block;
		}
	}
}

.drawer-nav-toggle {
	@include dims( 3.5rem auto );

	display: block;
	cursor: pointer;
	position: relative;

	// Media queries.
	@media( min-width: 768px ) {
		display: none;
	}
}

.drawer-nav-toggle__elem {
	@include dims( 100% 0.3rem );

	background-color: get-color( accent );
	position: absolute;
	top: 50%;
	left: 0;

	@include pseudo( before after ) {
		@include dims( 100% );

		content: '';
		display: block;
		background-color: inherit;
		position: absolute;
		top: 0;
		left: 0;
		transition: transform 0.1s;
		transform-origin: center;
	}

	@include pseudo( before ) {
		transform: translateY( -250% );
	}

	@include pseudo( after ) {
		transform: translateY( 250% );
	}

	// Additional styles to be applied when <body> element is 'active'.
	.drawer-nav-active & {
		background-color: transparent;

		@include pseudo( before after ) {
			background-color: get-color( white );
		}

		@include pseudo( before ) {
			transform: translateY( 0 ) rotate( 45deg );
		}

		@include pseudo( after ) {
			transform: translateY( 0 ) rotate( -45deg );
		}
	}
}
